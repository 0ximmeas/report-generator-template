name: Generate PDF report

on:
  workflow_call:
    inputs:
      generator-path:
        required: true
        type: string
      output-path:
        required: true
        type: string
      time:
        required: true
        type: string

  workflow_dispatch:
    inputs:
        generator-path:
          required: true
          type: string
          default: "cyfrin-report/report-generator-template"
        output-path:
          required: true
          type: string
          default: "./"
        time:
          required: false
          type: string

jobs:
  generate-report:
    runs-on: ubuntu-latest

    steps:

      - name: Initial greeting
        run: echo "Report generation started, triggered by a ${{ github.event_name }} event."
      
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Python dependencies
        run: |
          cd $GITHUB_WORKSPACE
          cd ${{ inputs.generator-path }}
          pip install -r requirements.txt
          
      - name: Install pandoc
        run: sudo apt-get install pandoc
        
      - name: Generate the report
        run: |
          cd $GITHUB_WORKSPACE
          cd ${{ inputs.generator-path }}
          chmod a+x ./scripts/*
          GITHUB_TOKEN=${{ secrets.ACCESS_TOKEN }} python3 generate_report.py
          
      - name: Compile the LaTeX file
        continue-on-error: true
        uses: dante-ev/latex-action@latest
        with:
          working_directory: ./${{ inputs.generator-path }}/working
          root_file: main.tex
          compiler: pdflatex
          args: -interaction=nonstopmode -shell-escape
      - name: Compile the LaTeX file (again, for references)
        continue-on-error: true
        uses: dante-ev/latex-action@latest
        with:
          working_directory: ./${{ inputs.generator-path }}/working
          root_file: main.tex
          compiler: pdflatex
          args: -interaction=nonstopmode -shell-escape

      - name: Get the current date
        id: date
        run: echo "name=date::$(date +'%Y-%m-%d')" >> $GITHUB_STATE
          
      - name: Upload the report PDF
        uses: actions/upload-artifact@v3
        with:
          name: ${{ (inputs.time == '' && env.DATE || inputs.time) }}-cyfrin-${{ github.event.repository.name }}.pdf
          path: ./${{ inputs.generator-path }}/working/main.pdf
          
      - name: Final greeting, job status
        run: echo "Job finished. Status ${{ job.status }}."
